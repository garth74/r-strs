% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format.R
\name{strs_f}
\alias{strs_f}
\title{Inline String Interpolation with Environment Variables}
\usage{
strs_f(string)
}
\arguments{
\item{string}{A character vector containing the string with placeholders in curly braces \code{{}}. If the vector contains
more than one string, they are concatenated before interpolation.}
}
\value{
A character vector with the placeholders replaced by the evaluated expressions.
}
\description{
The \code{strs_f} function allows for inline variable interpolation in strings, similar to Python's f-strings.
}
\details{
Under the hood, this function uses the \code{glue::glue_data()} function to perform the interpolation. However,
this function doesn't let you change the evaluation context or perform any string trimming. If any interpolated
expression is NA, it will be NA in the output. If any interpolated expression is NULL, it will be NULL in the output.
}
\examples{
name <- "Alice"
age <- 30
strs_f("My name is {name} and I am {age} years old.")
# Output: "My name is Alice and I am 30 years old."
age <- NULL
strs_f("My name is {name} and I am {age} years old.")
# Output: "My name is Alice and I am NULL years old."

}
