[{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pythonicr.github.io/strs/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pythonicr.github.io/strs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrett Shipley. Author, maintainer.","code":""},{"path":"https://pythonicr.github.io/strs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shipley G (2023). strs: Python-ish String Functions R. R package version 0.0.1,  https://pythonicr.github.io/strs, https://github.com/pythonicr/strs.","code":"@Manual{,   title = {strs: Python-ish String Functions in R},   author = {Garrett Shipley},   year = {2023},   note = {R package version 0.0.1,  https://pythonicr.github.io/strs},   url = {https://github.com/pythonicr/strs}, }"},{"path":"https://pythonicr.github.io/strs/index.html","id":"strs","dir":"","previous_headings":"","what":"Python-ish String Functions in R","title":"Python-ish String Functions in R","text":"package provides string functions analogous used Python’s str class. functions use stringi stringr, package mostly convenience wrapper anyone regularly switching Python R.","code":""},{"path":"https://pythonicr.github.io/strs/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Python-ish String Functions in R","text":"package currently isn’t CRAN, ’ll install using remotes. remotes::install_github(\"pythonicr/strs\")","code":""},{"path":"https://pythonicr.github.io/strs/index.html","id":"to-do","dir":"","previous_headings":"","what":"To do","title":"Python-ish String Functions in R","text":"function implemented exactly thing Python equivalent. capitalize casefold center count encode endswith expandtabs find format format_map index isalnum isalpha isascii isdecimal isdigit isidentifier islower isnumeric isprintable isspace istitle isupper join ljust lower lstrip maketrans partition removeprefix removesuffix replace rfind rindex rjust rpartition rsplit rstrip split splitlines startswith strip swapcase title translate upper zfill contains add mul","code":""},{"path":"https://pythonicr.github.io/strs/index.html","id":"additional-methods","dir":"","previous_headings":"","what":"Additional methods","title":"Python-ish String Functions in R","text":"normalize_whitespace wrap","code":""},{"path":"https://pythonicr.github.io/strs/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"Python-ish String Functions in R","text":"Python string methods Basic stringi","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_capitalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalize the First Character of Each Sentence — strs_capitalize","title":"Capitalize the First Character of Each Sentence — strs_capitalize","text":"function capitalizes first character string given string, based specified locale. similar Python's str.capitalize() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_capitalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalize the First Character of Each Sentence — strs_capitalize","text":"","code":"strs_capitalize(string, locale = \"en\")"},{"path":"https://pythonicr.github.io/strs/reference/strs_capitalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalize the First Character of Each Sentence — strs_capitalize","text":"string character vector element string capitalized. locale character string representing locale used capitalization. Defaults \"en\" (English). locale affects rules identifying sentences string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_capitalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalize the First Character of Each Sentence — strs_capitalize","text":"character vector length string, element capitalized version corresponding element string.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_capitalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalize the First Character of Each Sentence — strs_capitalize","text":"","code":"strs_capitalize(\"hello world\") #> [1] \"Hello world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_casefold.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Case Folding on Strings — strs_casefold","title":"Perform Case Folding on Strings — strs_casefold","text":"strs_casefold used perform case folding element character vector. function particularly useful case-insensitive string matching similar Python's str.casefold() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_casefold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Case Folding on Strings — strs_casefold","text":"","code":"strs_casefold(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_casefold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Case Folding on Strings — strs_casefold","text":"string character vector element string case-folded.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_casefold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Case Folding on Strings — strs_casefold","text":"character vector length string, element case-folded.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_casefold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Case Folding on Strings — strs_casefold","text":"","code":"strs_casefold(\"HELLO World\") #> [1] \"hello world\" strs_casefold(\"Äpfel\") #> [1] \"äpfel\""},{"path":"https://pythonicr.github.io/strs/reference/strs_center.html","id":null,"dir":"Reference","previous_headings":"","what":"Center a String in a Field of a Given Width — strs_center","title":"Center a String in a Field of a Given Width — strs_center","text":"strs_center centers element character vector field specified width. pads string sides specified character (defaulting space). similar Python's str.center() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center a String in a Field of a Given Width — strs_center","text":"","code":"strs_center(string, width, fillchar = \" \")"},{"path":"https://pythonicr.github.io/strs/reference/strs_center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center a String in a Field of a Given Width — strs_center","text":"string character vector element string centered. width total width field string centered. fillchar character used padding. specified, defaults space. first character fillchar used longer one character.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center a String in a Field of a Given Width — strs_center","text":"character vector length string, element centered field specified width.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_center.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center a String in a Field of a Given Width — strs_center","text":"","code":"strs_center(\"hello\", 10) #> [1] \"  hello   \" strs_center(\"world\", 10, \"*\") #> [1] \"**world***\""},{"path":"https://pythonicr.github.io/strs/reference/strs_contains.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains a Substring — strs_contains","title":"Check if String Contains a Substring — strs_contains","text":"strs_contains checks whether element character vector contains specified substring. function mirrors functionality Python's str.__contains__() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_contains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains a Substring — strs_contains","text":"","code":"strs_contains(string, substring)"},{"path":"https://pythonicr.github.io/strs/reference/strs_contains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains a Substring — strs_contains","text":"string character vector element string checked. substring substring search within element string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_contains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains a Substring — strs_contains","text":"logical vector length string, element indicating whether corresponding element string contains substring.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_contains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains a Substring — strs_contains","text":"","code":"strs_contains(\"hello world\", \"world\") #> [1] TRUE strs_contains(c(\"apple\", \"banana\", \"cherry\"), \"a\") #> [1]  TRUE  TRUE FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Occurrences of a Substring in a String — strs_count","title":"Count Occurrences of a Substring in a String — strs_count","text":"strs_count counts number times specified substring occurs element character vector. Optionally, search can limited substring element, specified start end positions. function similar Python's str.count() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Occurrences of a Substring in a String — strs_count","text":"","code":"strs_count(string, substring, start = 1L, end = -1L)"},{"path":"https://pythonicr.github.io/strs/reference/strs_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Occurrences of a Substring in a String — strs_count","text":"string character vector element string count occurrences substring. substring substring count within element string. start optional integer specifying starting position element string search. Defaults 1, indicating start string. end optional integer specifying ending position element string search. default value -1 indicates end string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Occurrences of a Substring in a String — strs_count","text":"integer vector length string, element indicating count substring corresponding element string.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Occurrences of a Substring in a String — strs_count","text":"","code":"strs_count(\"hello world\", \"o\") #> [1] 2 strs_count(\"banana\", \"na\") #> [1] 2 strs_count(\"hello world\", \"o\", start = 6) #> [1] 1 strs_count(\"hello world\", \"o\", end = 5) #> [1] 1"},{"path":"https://pythonicr.github.io/strs/reference/strs_endswith.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Ends With a Specified Suffix — strs_endswith","title":"Check if String Ends With a Specified Suffix — strs_endswith","text":"strs_endswith determines whether element character vector ends specified suffix. function similar Python's str.endswith() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_endswith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Ends With a Specified Suffix — strs_endswith","text":"","code":"strs_endswith(string, suffix)"},{"path":"https://pythonicr.github.io/strs/reference/strs_endswith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Ends With a Specified Suffix — strs_endswith","text":"string character vector element string checked. suffix suffix check end element string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_endswith.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Ends With a Specified Suffix — strs_endswith","text":"logical vector length string, element indicating whether corresponding element string ends suffix.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_endswith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Ends With a Specified Suffix — strs_endswith","text":"","code":"strs_endswith(\"hello world\", \"world\") #> [1] TRUE strs_endswith(c(\"test\", \"hello\", \"world\"), \"ld\") #> [1] FALSE FALSE  TRUE"},{"path":"https://pythonicr.github.io/strs/reference/strs_expandtabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Tabs in a String to Spaces — strs_expandtabs","title":"Expand Tabs in a String to Spaces — strs_expandtabs","text":"strs_expandtabs replaces tab character (\\\\t) string specified number spaces. function behaves similarly Python's str.expandtabs() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_expandtabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Tabs in a String to Spaces — strs_expandtabs","text":"","code":"strs_expandtabs(string, tabsize = 8)"},{"path":"https://pythonicr.github.io/strs/reference/strs_expandtabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Tabs in a String to Spaces — strs_expandtabs","text":"string character vector element string expand tabs. tabsize integer specifying number spaces replace tab character . Defaults 8.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_expandtabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Tabs in a String to Spaces — strs_expandtabs","text":"character vector length string, tabs element replaced tabsize number spaces.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_expandtabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand Tabs in a String to Spaces — strs_expandtabs","text":"","code":"strs_expandtabs(\"hello\\tworld\", 4) #> [1] \"hello    world\" strs_expandtabs(\"one\\ttwo\\tthree\", 8) #> [1] \"one        two        three\""},{"path":"https://pythonicr.github.io/strs/reference/strs_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the First Occurrence of a Substring in a String — strs_find","title":"Find the First Occurrence of a Substring in a String — strs_find","text":"strs_find locates first occurrence specified substring within element character vector. function analogous Python's str.find() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the First Occurrence of a Substring in a String — strs_find","text":"","code":"strs_find(string, substring)"},{"path":"https://pythonicr.github.io/strs/reference/strs_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the First Occurrence of a Substring in a String — strs_find","text":"string character vector element string search. substring substring find within element string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the First Occurrence of a Substring in a String — strs_find","text":"integer vector length string, element representing starting position first occurrence substring corresponding element string. substring found, function returns NA element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the First Occurrence of a Substring in a String — strs_find","text":"","code":"strs_find(\"hello world\", \"world\") #> [1] 7 strs_find(\"hello world\", \"x\") #> [1] NA"},{"path":"https://pythonicr.github.io/strs/reference/strs_isalnum.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is Alphanumeric — strs_isalnum","title":"Check if String is Alphanumeric — strs_isalnum","text":"strs_isalnum checks whether element character vector alphanumeric. means function tests characters string either letters digits. similar Python's str.isalnum() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isalnum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is Alphanumeric — strs_isalnum","text":"","code":"strs_isalnum(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isalnum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is Alphanumeric — strs_isalnum","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isalnum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is Alphanumeric — strs_isalnum","text":"logical vector length string, element indicating whether corresponding element string completely alphanumeric.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isalnum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is Alphanumeric — strs_isalnum","text":"","code":"strs_isalnum(\"hello123\") #> [1] TRUE strs_isalnum(\"hello world\") #> [1] FALSE strs_isalnum(\"12345\") #> [1] TRUE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isalpha.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains Only Alphabetical Characters — strs_isalpha","title":"Check if String Contains Only Alphabetical Characters — strs_isalpha","text":"strs_isalpha checks whether element character vector contains alphabetical characters. similar Python's str.isalpha() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isalpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains Only Alphabetical Characters — strs_isalpha","text":"","code":"strs_isalpha(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isalpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains Only Alphabetical Characters — strs_isalpha","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isalpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains Only Alphabetical Characters — strs_isalpha","text":"logical vector length string, indicating whether element contains alphabetical characters.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isalpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains Only Alphabetical Characters — strs_isalpha","text":"","code":"strs_isalpha(\"hello\") #> [1] TRUE strs_isalpha(\"hello123\") #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isascii.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains Only ASCII Characters — strs_isascii","title":"Check if String Contains Only ASCII Characters — strs_isascii","text":"strs_isascii determines whether element character vector contains ASCII characters. similar Python's str.isascii() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isascii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains Only ASCII Characters — strs_isascii","text":"","code":"strs_isascii(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isascii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains Only ASCII Characters — strs_isascii","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isascii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains Only ASCII Characters — strs_isascii","text":"logical vector length string, indicating whether element contains ASCII characters.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isascii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains Only ASCII Characters — strs_isascii","text":"","code":"strs_isascii(\"hello\") #> [1] TRUE strs_isascii(\"héllo\") #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isdecimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains Only Decimal Characters — strs_isdecimal","title":"Check if String Contains Only Decimal Characters — strs_isdecimal","text":"strs_isdecimal checks whether element character vector contains decimal characters. similar Python's str.isdecimal() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isdecimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains Only Decimal Characters — strs_isdecimal","text":"","code":"strs_isdecimal(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isdecimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains Only Decimal Characters — strs_isdecimal","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isdecimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains Only Decimal Characters — strs_isdecimal","text":"logical vector length string, indicating whether element contains decimal characters.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isdecimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains Only Decimal Characters — strs_isdecimal","text":"","code":"strs_isdecimal(\"12345\") #> [1] TRUE strs_isdecimal(\"123.45\") # FALSE #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isdigit.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains Only Digits — strs_isdigit","title":"Check if String Contains Only Digits — strs_isdigit","text":"strs_isdigit checks whether element character vector contains digits. similar Python's str.isdigit() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isdigit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains Only Digits — strs_isdigit","text":"","code":"strs_isdigit(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isdigit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains Only Digits — strs_isdigit","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isdigit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains Only Digits — strs_isdigit","text":"logical vector length string, indicating whether element contains digits.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isdigit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains Only Digits — strs_isdigit","text":"","code":"strs_isdigit(\"12345\") #> [1] TRUE strs_isdigit(\"123a\") #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_islower.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is in Lowercase — strs_islower","title":"Check if String is in Lowercase — strs_islower","text":"strs_islower checks whether element character vector lowercase. similar Python's str.islower() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_islower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is in Lowercase — strs_islower","text":"","code":"strs_islower(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_islower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is in Lowercase — strs_islower","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_islower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is in Lowercase — strs_islower","text":"logical vector length string, indicating whether element entirely lowercase.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_islower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is in Lowercase — strs_islower","text":"","code":"strs_islower(\"hello\") #> [1] TRUE strs_islower(\"Hello\") #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isnumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains Only Numeric Characters — strs_isnumeric","title":"Check if String Contains Only Numeric Characters — strs_isnumeric","text":"strs_isnumeric checks whether element character vector contains numeric characters. similar Python's str.isnumeric() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isnumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains Only Numeric Characters — strs_isnumeric","text":"","code":"strs_isnumeric(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isnumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains Only Numeric Characters — strs_isnumeric","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isnumeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains Only Numeric Characters — strs_isnumeric","text":"logical vector length string, indicating whether element contains numeric characters.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isnumeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains Only Numeric Characters — strs_isnumeric","text":"","code":"strs_isnumeric(\"12345\") #> [1] TRUE strs_isnumeric(\"123a\") # contains a non-numeric character #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Contains Only Whitespace Characters — strs_isspace","title":"Check if String Contains Only Whitespace Characters — strs_isspace","text":"strs_isspace checks whether element character vector contains whitespace characters. similar Python's str.isspace() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Contains Only Whitespace Characters — strs_isspace","text":"","code":"strs_isspace(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Contains Only Whitespace Characters — strs_isspace","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Contains Only Whitespace Characters — strs_isspace","text":"logical vector length string, indicating whether element contains whitespace characters.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Contains Only Whitespace Characters — strs_isspace","text":"","code":"strs_isspace(\"    \") #> [1] TRUE strs_isspace(\"hello world\") #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_istitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is in Title Case — strs_istitle","title":"Check if String is in Title Case — strs_istitle","text":"strs_istitle checks whether element character vector title case. similar Python's str.istitle method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_istitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is in Title Case — strs_istitle","text":"","code":"strs_istitle(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_istitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is in Title Case — strs_istitle","text":"string character vector element string checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_istitle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is in Title Case — strs_istitle","text":"logical vector length string, indicating whether element title case.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_istitle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is in Title Case — strs_istitle","text":"","code":"strs_istitle(\"This Is Title Case\") #> [1] TRUE strs_istitle(\"not title case\") #> [1] FALSE strs_istitle(\"123 Another Example\") #> [1] TRUE"},{"path":"https://pythonicr.github.io/strs/reference/strs_isupper.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String is in Uppercase — strs_isupper","title":"Check if String is in Uppercase — strs_isupper","text":"strs_isupper checks whether element character vector uppercase. similar Python's str.isupper() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isupper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String is in Uppercase — strs_isupper","text":"","code":"strs_isupper(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_isupper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String is in Uppercase — strs_isupper","text":"string character vector checked.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_isupper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String is in Uppercase — strs_isupper","text":"logical vector length string, indicating whether element entirely uppercase.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_isupper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String is in Uppercase — strs_isupper","text":"","code":"strs_isupper(\"HELLO\") #> [1] TRUE strs_isupper(\"Hello\") #> [1] FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join Elements into a Single String with a Separator — strs_join","title":"Join Elements into a Single String with a Separator — strs_join","text":"strs_join concatenates elements iterable using sep. similar Python's str.join().","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join Elements into a Single String with a Separator — strs_join","text":"","code":"strs_join(sep, iterable)"},{"path":"https://pythonicr.github.io/strs/reference/strs_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join Elements into a Single String with a Separator — strs_join","text":"sep string separator used join elements. iterable character vector joined.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join Elements into a Single String with a Separator — strs_join","text":"single string elements iterable joined sep.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join Elements into a Single String with a Separator — strs_join","text":"","code":"strs_join(\"-\", c(\"hello\", \"world\")) #> [1] \"hello-world\" strs_join(\"\", c(\"hello\", \"world\"))  # no separator #> [1] \"helloworld\""},{"path":"https://pythonicr.github.io/strs/reference/strs_ljust.html","id":null,"dir":"Reference","previous_headings":"","what":"Left-justify String in a Field of a Given Width — strs_ljust","title":"Left-justify String in a Field of a Given Width — strs_ljust","text":"strs_ljust left-justifies element character vector field specified width. similar Python's str.ljust() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_ljust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left-justify String in a Field of a Given Width — strs_ljust","text":"","code":"strs_ljust(string, width, fillchar = \" \")"},{"path":"https://pythonicr.github.io/strs/reference/strs_ljust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left-justify String in a Field of a Given Width — strs_ljust","text":"string character vector element string left-justified. width total width field string left-justified. fillchar character used padding right.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_ljust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left-justify String in a Field of a Given Width — strs_ljust","text":"character vector length string, element left-justified field specified width.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_ljust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Left-justify String in a Field of a Given Width — strs_ljust","text":"","code":"strs_ljust(\"hello\", 10) #> [1] \"     hello\" strs_ljust(\"world\", 10, \"*\") #> [1] \"*****world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_lower.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to Lowercase — strs_lower","title":"Convert String to Lowercase — strs_lower","text":"strs_lower converts element character vector lowercase, based specified locale. similar Python's str.lower() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_lower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to Lowercase — strs_lower","text":"","code":"strs_lower(string, locale = \"en\")"},{"path":"https://pythonicr.github.io/strs/reference/strs_lower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to Lowercase — strs_lower","text":"string character vector converted lowercase. locale character string representing locale used conversion.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_lower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String to Lowercase — strs_lower","text":"character vector length string, element converted lowercase.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_lower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert String to Lowercase — strs_lower","text":"","code":"strs_lower(\"HELLO WORLD\") #> [1] \"hello world\" strs_lower(\"Äpfel\", locale = \"de\") #> [1] \"äpfel\""},{"path":"https://pythonicr.github.io/strs/reference/strs_lstrip.html","id":null,"dir":"Reference","previous_headings":"","what":"Left Strip Characters from a String — strs_lstrip","title":"Left Strip Characters from a String — strs_lstrip","text":"strs_lstrip removes leading characters (spaces default) element character vector. similar Python's str.lstrip() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_lstrip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left Strip Characters from a String — strs_lstrip","text":"","code":"strs_lstrip(string, chars = NULL)"},{"path":"https://pythonicr.github.io/strs/reference/strs_lstrip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left Strip Characters from a String — strs_lstrip","text":"string character vector element string left-stripped. chars optional string characters removed beginning element. NULL, whitespace removed.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_lstrip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left Strip Characters from a String — strs_lstrip","text":"character vector length string, specified characters removed beginning element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_lstrip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Left Strip Characters from a String — strs_lstrip","text":"","code":"strs_lstrip(\"    hello world\") #> [1] \"hello world\" strs_lstrip(\"xxxyhello world\", chars = \"xy\") #> [1] \"hello world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_normalize_whitespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Whitespace in a String — strs_normalize_whitespace","title":"Normalize Whitespace in a String — strs_normalize_whitespace","text":"strs_normalize_whitespace normalizes whitespace element character vector. trims leading trailing whitespace replaces sequence whitespace characters within string single space. function akin typical Python pattern \" \".join(str.split()).","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_normalize_whitespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Whitespace in a String — strs_normalize_whitespace","text":"","code":"strs_normalize_whitespace(string)"},{"path":"https://pythonicr.github.io/strs/reference/strs_normalize_whitespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Whitespace in a String — strs_normalize_whitespace","text":"string character vector element string normalize whitespace.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_normalize_whitespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Whitespace in a String — strs_normalize_whitespace","text":"character vector length string, whitespace normalized element.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_normalize_whitespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Whitespace in a String — strs_normalize_whitespace","text":"","code":"strs_normalize_whitespace(\"  hello   world  \") #> [1] \"hello world\" strs_normalize_whitespace(\"\\thello\\nworld\\t\") #> [1] \"hello world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_removeprefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Prefix from a String — strs_removeprefix","title":"Remove a Prefix from a String — strs_removeprefix","text":"strs_removeprefix removes specified prefix start element character vector. similar Python's str.removeprefix() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_removeprefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Prefix from a String — strs_removeprefix","text":"","code":"strs_removeprefix(string, prefix)"},{"path":"https://pythonicr.github.io/strs/reference/strs_removeprefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Prefix from a String — strs_removeprefix","text":"string character vector element string remove prefix. prefix prefix remove.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_removeprefix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a Prefix from a String — strs_removeprefix","text":"character vector length string, prefix removed element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_removeprefix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a Prefix from a String — strs_removeprefix","text":"","code":"strs_removeprefix(\"testString\", \"test\") #> [1] \"String\" strs_removeprefix(\"hello world\", \"hello\") #> [1] \" world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_removesuffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a Suffix from a String — strs_removesuffix","title":"Remove a Suffix from a String — strs_removesuffix","text":"strs_removesuffix removes specified suffix end element character vector. similar Python's str.removesuffix() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_removesuffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a Suffix from a String — strs_removesuffix","text":"","code":"strs_removesuffix(string, suffix)"},{"path":"https://pythonicr.github.io/strs/reference/strs_removesuffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a Suffix from a String — strs_removesuffix","text":"string character vector element string remove suffix. suffix suffix remove.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_removesuffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a Suffix from a String — strs_removesuffix","text":"character vector length string, suffix removed element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_removesuffix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a Suffix from a String — strs_removesuffix","text":"","code":"strs_removesuffix(\"StringTest\", \"Test\") #> [1] \"String\" strs_removesuffix(\"hello world\", \"world\") #> [1] \"hello \""},{"path":"https://pythonicr.github.io/strs/reference/strs_replace.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Substring in a String — strs_replace","title":"Replace Substring in a String — strs_replace","text":"strs_replace replaces occurrences specified substring element character vector. similar Python's str.replace() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_replace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Substring in a String — strs_replace","text":"","code":"strs_replace(string, substring, replacement)"},{"path":"https://pythonicr.github.io/strs/reference/strs_replace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Substring in a String — strs_replace","text":"string character vector element string replace substring. substring substring replaced. replacement string replace substring .","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_replace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Substring in a String — strs_replace","text":"character vector length string, substring replaced replacement.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_replace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Substring in a String — strs_replace","text":"","code":"strs_replace(\"hello world\", \"world\", \"there\") #> [1] \"hello there\" strs_replace(\"banana\", \"na\", \"mo\") #> [1] \"bamomo\""},{"path":"https://pythonicr.github.io/strs/reference/strs_rfind.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the Last Occurrence of a Substring in a String — strs_rfind","title":"Find the Last Occurrence of a Substring in a String — strs_rfind","text":"strs_rfind locates last occurrence specified substring within element character vector. similar Python's str.rfind() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_rfind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the Last Occurrence of a Substring in a String — strs_rfind","text":"","code":"strs_rfind(string, substring)"},{"path":"https://pythonicr.github.io/strs/reference/strs_rfind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the Last Occurrence of a Substring in a String — strs_rfind","text":"string character vector element string search. substring substring find within element string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_rfind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the Last Occurrence of a Substring in a String — strs_rfind","text":"integer vector length string, element representing starting position last occurrence substring corresponding element string. substring found, function returns NA element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_rfind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the Last Occurrence of a Substring in a String — strs_rfind","text":"","code":"strs_rfind(\"hello world\", \"o\") #> [1] 8 strs_rfind(\"hello world\", \"x\") # not found #> [1] NA"},{"path":"https://pythonicr.github.io/strs/reference/strs_rjust.html","id":null,"dir":"Reference","previous_headings":"","what":"Right-justify String in a Field of a Given Width — strs_rjust","title":"Right-justify String in a Field of a Given Width — strs_rjust","text":"strs_rjust right-justifies element character vector field specified width. similar Python's str.rjust() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_rjust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Right-justify String in a Field of a Given Width — strs_rjust","text":"","code":"strs_rjust(string, width, fillchar = \" \")"},{"path":"https://pythonicr.github.io/strs/reference/strs_rjust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right-justify String in a Field of a Given Width — strs_rjust","text":"string character vector element string right-justified. width total width field string right-justified. fillchar character used padding left.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_rjust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Right-justify String in a Field of a Given Width — strs_rjust","text":"character vector length string, element right-justified field specified width.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_rjust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Right-justify String in a Field of a Given Width — strs_rjust","text":"","code":"strs_rjust(\"hello\", 10) #> [1] \"hello     \" strs_rjust(\"world\", 10, \"*\") #> [1] \"world*****\""},{"path":"https://pythonicr.github.io/strs/reference/strs_rstrip.html","id":null,"dir":"Reference","previous_headings":"","what":"Right Strip Characters from a String — strs_rstrip","title":"Right Strip Characters from a String — strs_rstrip","text":"strs_rstrip removes trailing characters (spaces default) element character vector. similar Python's str.rstrip() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_rstrip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Right Strip Characters from a String — strs_rstrip","text":"","code":"strs_rstrip(string, chars = NULL)"},{"path":"https://pythonicr.github.io/strs/reference/strs_rstrip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right Strip Characters from a String — strs_rstrip","text":"string character vector element string right-stripped. chars optional string characters removed end element. NULL, whitespace removed.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_rstrip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Right Strip Characters from a String — strs_rstrip","text":"character vector length string, specified characters removed end element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_rstrip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Right Strip Characters from a String — strs_rstrip","text":"","code":"strs_rstrip(\"hello world    \") #> [1] \"hello world\" strs_rstrip(\"hello worldxxx\", chars = \"x\") #> [1] \"hello world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice Substrings from a String — strs_slice","title":"Slice Substrings from a String — strs_slice","text":"strs_slice extracts substrings element character vector, specified start stop positions. similar Python's slicing syntax strings.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice Substrings from a String — strs_slice","text":"","code":"strs_slice(string, start = 1L, stop = -1L)"},{"path":"https://pythonicr.github.io/strs/reference/strs_slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice Substrings from a String — strs_slice","text":"string character vector element string slice. start starting position slicing (inclusive). stop ending position slicing (exclusive).","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slice Substrings from a String — strs_slice","text":"character vector length string, element sliced substring.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slice Substrings from a String — strs_slice","text":"","code":"strs_slice(\"hello world\", 1, 5) #> [1] \"hello\" strs_slice(\"hello world\", 7) #> [1] \"world\" strs_slice(\"hello world\", start = 7, stop = 11) #> [1] \"world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split String into Substrings — strs_split","title":"Split String into Substrings — strs_split","text":"strs_split splits element character vector substrings based separator. similar Python's str.split() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split String into Substrings — strs_split","text":"","code":"strs_split(string, sep = \" \", maxsplit = -1L)"},{"path":"https://pythonicr.github.io/strs/reference/strs_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split String into Substrings — strs_split","text":"string character vector split. sep separator split string. maxsplit maximum number splits perform. -1, possible splits performed.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split String into Substrings — strs_split","text":"list character vectors, vector containing split substrings corresponding element string.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split String into Substrings — strs_split","text":"","code":"strs_split(\"hello world\", \" \") #> [[1]] #> [1] \"hello\" \"world\" #>  strs_split(\"one,two,three\", \",\", maxsplit = 1) #> [[1]] #> [1] \"one\"       \"two,three\" #>"},{"path":"https://pythonicr.github.io/strs/reference/strs_splitlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split String into Lines — strs_splitlines","title":"Split String into Lines — strs_splitlines","text":"strs_splitlines splits element character vector separate lines. similar Python's str.splitlines() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_splitlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split String into Lines — strs_splitlines","text":"","code":"strs_splitlines(string, keepends = FALSE)"},{"path":"https://pythonicr.github.io/strs/reference/strs_splitlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split String into Lines — strs_splitlines","text":"string character vector split lines. keepends boolean indicating whether retain line end characters.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_splitlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split String into Lines — strs_splitlines","text":"list character vectors, vector containing lines corresponding element string.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_splitlines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split String into Lines — strs_splitlines","text":"","code":"strs_splitlines(\"hello\\nworld\\n\") #> [[1]] #> [1] \"hello\" \"world\" #>  strs_splitlines(\"line1\\r\\nline2\\n\", keepends = TRUE) #> [[1]] #> [1] \"line1\" \"line2\" \"\"      #>"},{"path":"https://pythonicr.github.io/strs/reference/strs_startswith.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if String Starts With a Specified Prefix — strs_startswith","title":"Check if String Starts With a Specified Prefix — strs_startswith","text":"strs_startswith determines whether element character vector starts specified prefix. similar Python's str.startswith() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_startswith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if String Starts With a Specified Prefix — strs_startswith","text":"","code":"strs_startswith(string, prefix)"},{"path":"https://pythonicr.github.io/strs/reference/strs_startswith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if String Starts With a Specified Prefix — strs_startswith","text":"string character vector element string checked. prefix prefix check start element string.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_startswith.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if String Starts With a Specified Prefix — strs_startswith","text":"logical vector length string, element indicating whether corresponding element string starts prefix.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_startswith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if String Starts With a Specified Prefix — strs_startswith","text":"","code":"strs_startswith(\"hello world\", \"hello\") #> [1] TRUE strs_startswith(c(\"test\", \"hello\", \"world\"), \"te\") #> [1]  TRUE FALSE FALSE"},{"path":"https://pythonicr.github.io/strs/reference/strs_strip.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip Characters from Both Ends of a String — strs_strip","title":"Strip Characters from Both Ends of a String — strs_strip","text":"strs_strip removes leading trailing characters (spaces default) element character vector. similar Python's str.strip() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_strip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip Characters from Both Ends of a String — strs_strip","text":"","code":"strs_strip(string, chars = NULL)"},{"path":"https://pythonicr.github.io/strs/reference/strs_strip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip Characters from Both Ends of a String — strs_strip","text":"string character vector element string stripped. chars optional string characters removed ends element. NULL, whitespace removed.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_strip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip Characters from Both Ends of a String — strs_strip","text":"character vector length string, specified characters removed ends element.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_strip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip Characters from Both Ends of a String — strs_strip","text":"","code":"strs_strip(\"    hello world    \") #> [1] \"hello world\" strs_strip(\"xxxyhello worldyyy\", chars = \"xy\") #> [1] \"hello world\""},{"path":"https://pythonicr.github.io/strs/reference/strs_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to Title Case — strs_title","title":"Convert String to Title Case — strs_title","text":"strs_title converts element character vector title case, based specified locale. similar Python's str.title() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to Title Case — strs_title","text":"","code":"strs_title(string, locale = \"en\")"},{"path":"https://pythonicr.github.io/strs/reference/strs_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to Title Case — strs_title","text":"string character vector converted title case. locale character string representing locale used conversion.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String to Title Case — strs_title","text":"character vector length string, element converted title case.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert String to Title Case — strs_title","text":"","code":"strs_title(\"hello world\") #> [1] \"Hello World\" strs_title(\"guten tag\", locale = \"de\") #> [1] \"Guten Tag\""},{"path":"https://pythonicr.github.io/strs/reference/strs_upper.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to Uppercase — strs_upper","title":"Convert String to Uppercase — strs_upper","text":"strs_upper converts element character vector uppercase, based specified locale. similar Python's str.upper() method.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_upper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to Uppercase — strs_upper","text":"","code":"strs_upper(string, locale = \"en\")"},{"path":"https://pythonicr.github.io/strs/reference/strs_upper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to Uppercase — strs_upper","text":"string character vector converted uppercase. locale character string representing locale used conversion.","code":""},{"path":"https://pythonicr.github.io/strs/reference/strs_upper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String to Uppercase — strs_upper","text":"character vector length string, element converted uppercase.","code":""},{"path":[]},{"path":"https://pythonicr.github.io/strs/reference/strs_upper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert String to Uppercase — strs_upper","text":"","code":"strs_upper(\"hello world\") #> [1] \"HELLO WORLD\" strs_upper(\"äpfel\", locale = \"de\") #> [1] \"ÄPFEL\""}]
